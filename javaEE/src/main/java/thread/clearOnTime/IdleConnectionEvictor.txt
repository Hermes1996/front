package thread.clearOnTime;

import org.apache.http.conn.HttpClientConnectionManager;

/**
 * 
 * 定期清理无效连接线程
 *
 */
public class IdleConnectionEvictor extends Thread
{
    /**
     * 连接管理器
     */
    private final HttpClientConnectionManager connectionManager;

    /**
     * 停止标志
     可见性：结束标志共享
     */
    private volatile boolean shutdown;

    /**
     * 构造方法
     *
     * @param connectionManager
     */
    public IdleConnectionEvictor(HttpClientConnectionManager connectionManager)
    {
        this.connectionManager = connectionManager;

        // 启动线程
        this.start();
    }

    @Override
    public void run()
    {
        try
        {
            while (!shutdown)
            {
                synchronized (this)
                {
                    // 每隔5秒执行检测关闭失效的连接
                    wait(5000);

                    // 关闭失效的连接
                    connectionManager.closeExpiredConnections();
                }
            }
        }
        catch (InterruptedException e)
        {
            // 结束
            e.printStackTrace();
        }
    }

    /**
     * 
     * 停止方法
     * 
     * @return void
     */
    public void shutdown()
    {
        // 设置停止标志
        shutdown = true;

        synchronized (this)
        {
            notifyAll();
        }
    }
}
